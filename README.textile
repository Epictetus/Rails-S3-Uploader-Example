h2. Blog Post

"http://www.railstoolkit.com/posts/uploading-files-directly-to-amazon-s3-using-fancyupload":http://www.railstoolkit.com/posts/uploading-files-directly-to-amazon-s3-using-fancyupload

h2. Steps to make the example work

h3. Add your s3 bucket and keys to config/amazon_s3.yml
h3. Enter the correct path in helpers/uploads_helper.rb

bc. var up = new FancyUpload3.Attach('uploader_file_list', '#upload_link', { 
   path: 'http://*yourdomain*/javascripts/fancyupload/source/Swiff.Uploader.swf'@

h3. Enter the correct path for the progress bar image in javascripts/fancyupload/source/FancyUpload3.Attach.js

bc. var progress = new Element('img', {'class': 'file-progress', src: 'http://*yourdomain*/javascripts/fancyupload/assets/progress-bar/bar.gif'}).inject(this.ui.size, 'after');@

h3. Make sure a public readable crossdomain.xml exists in the s3 bucket you specified in config/amazon_s3.yml, with the following content (you can also limit access to your domain to be more secure):

bc. <?xml version="1.0"?>
<!DOCTYPE cross-domain-policy SYSTEM
"http://www.macromedia.com/xml/dtds/cross-domain-policy.dtd">
<cross-domain-policy>
  <allow-access-from domain="*" secure="false" />
</cross-domain-policy>

h3. Make sure a folder named 'test' exists in that bucket. Files will be uploaded to that folder.

